View(flood10pct)
View(flood0_2pct)
ls()
names(hecras)
points(hecras$station,hecras$min_ch_el,cex=0.4,col="purple")
?splint
xOldStreambed <- streamBed[[1]]
yOldStreambed <- streamBed[[2]]
plot(xOldStreambed, yOldStreambed, type="l",col="black")
lines(x0_2,y0_2),col="green")
x0_2 <- flood0_2pct[[1]]
y0_2 <- flood0_2pct[[2]]
lines(x0_2,y0_2),col="green")
lines(x0_2,y0_2,col="green")
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
x[x>30000] <- x * 0.98
x[x>30000] <- x[x>30000] * 0.98
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
xNewStreambed <- hecras$station
xNewStreambed <- hecras$station
View(flood_0_2)
fix(xNewStreambed)
xNewStreambed[xNewStreambed>30000] <- xNewStreambed[xNewStreambed>30000] - xNewStreambed[xNewStreambed>30000] * red_fact
fix(xNewStreambed)
points(xNewStreambed,yNewStreambed,cex=0.4,col="purple")
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
?grid
grid(20,20)
grid(30,30)
?lines
abline(h=1:150)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('~/.active-rstudio-document')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
points(x,y,cex=0.4,col="pink")
x
y
View(hecras)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
View(dataFrame)
View(newDataFrame)
View(test)
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
rm(list=ls())
#Works:
dates <- c("1985-03-13 11:30:00", "1985-05-07 09:30:00", "1985-09-10 09:30:00","1985-11-19 10:30:00", "1986-03-10 11:00:00", "1986-09-09 10:30:00","1986-11-12 10:35:00", "1987-03-03 12:30:00", "1987-05-05 09:40:00", "1987-09-01 11:40:00")
dates <- strptime(dates, "%Y-%m-%d %H:%M:%S")
USGSPCode <- c("01075", "01075", "01075","01075", "01075", "01075","01075", "01075", "01075","01075")
values <- c(1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0)
qualifiers <- c("<", "<", "<","<", "<", "<","<", "<", "<", "<")
dataFrame <- data.frame(USGSPCode, dates, qualifiers, values)
newDataFrame <- reshape(dataFrame, idvar="dates", timevar="USGSPCode", direction="wide")
#Doesn't work:
url <- "http://www.waterqualitydata.us/Result/search?siteid=USGS-01594440&pCode=01075&startDateLo=01-01-1985&startDateHi=10-10-1987&countrycode=US&mimeType=tsv"
retval <- read.delim(url, header = TRUE, quote="\"", dec=".", sep='\t', colClasses=c('character'), fill = TRUE)
retval$DetectionQuantitationLimitTypeName <- ifelse((length(grep("Lower", retval$DetectionQuantitationLimitTypeName)) > 0),"<",retval$DetectionQuantitationLimitTypeName)
correctedData<-ifelse((nchar(retval$DetectionQuantitationLimitTypeName)==0),retval$ResultMeasureValue,retval$DetectionQuantitationLimitMeasure.MeasureValue)
test <- data.frame(retval$USGSPCode)
test$dates <-strptime(paste(retval$ActivityStartDate,retval$ActivityStartTime.Time,sep=" "), "%Y-%m-%d %H:%M:%S")
test$qualifiers <- factor(retval$DetectionQuantitationLimitTypeName)
test$values <- as.numeric(correctedData)
test$dates <- strptime(test$dates, "%Y-%m-%d %H:%M:%S")
colnames(test)<- c("USGSPCode","dates","qualifiers","values")
rm(retval)
data <- reshape(test, idvar="dates", timevar = "USGSPCode", direction="wide")
str(test)
str(dataFrame)
?POSIXct
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
str(test)
str(dataFrame)
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
str(dataFrame)
str(test)
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
str(test)
str(dataFrame)
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
str(dataFrame)
str(test)
source('D:/SMWData/scripts/R_Scripts/test__reshape.R')
View(test)
View(dataFrame)
source('~/.active-rstudio-document')
names(test$dates)
attr(test$dates)
attr(test)
attrib
??attr
attributes(test)
attributes(test$dates)
source('~/.active-rstudio-document')
attributes(test$dates)
source('~/.active-rstudio-document')
attributes(test$dates)
test$dates$names
attr(test$dates,names)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
View(hecras)
y
hecras$profile
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
View(hecras)
View(rasflood_0_2)
View(rasflood_1)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
View(streamBed)
View(hecras)
x
as.numeric(x)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
?legend
legend(legend=c("1% AEP - Previous FIS", "1% AEP - Current HECRAS"))
legend("bottomright",legend=c("1% AEP - Previous FIS", "1% AEP - Current HECRAS"))
legend("bottomright",legend=c("1% AEP - Previous FIS", "1% AEP - Current HECRAS"),
lines=(c("green",NA)))
legend("bottomright",legend=c("1% AEP - Previous FIS", "1% AEP - Current HECRAS"),
line=(c("green",NA)))
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
install.packages("RNCEP")
x <- rnorm(100)
x
y <- x * 10 + runif()
runif(10)
runif()
runif(length(x))
y <- x * 10 + (runif(length(x))- 0.5) * 3
y
x
plot(x,y)
lm(y~x)
fit1 <- lm(y~x)
fit2 <- lm(log10(y)~log10(x)
)
log(-1)
x <- x + 3
y <- y + 30
y
x
fit1 <- lm(y~x)
fit2 <- lm(log10(y)~log10(x) )
fit2
fir1
fit1
summary(fit1)
summary(fit2)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R')
plot(fit1)
x <- rnorm(100)
y <- x * 10 + (runif(length(x))- 0.5) * 3
x <- x + 3
y <- y + 30
fit1 <- lm(y~x)
fit2 <- lm(log10(y)~log10(x) )
x
y
y <- y + 1
x
fit1 <- lm(y~x)
fit2 <- lm(log10(y)~log10(x) )
min(x)
x <- x + 1
fit1 <- lm(y~x)
fit2 <- lm(log10(y)~log10(x) )
plot(fit1)
fitted(fit1)
fit3 <- lm(log(y)~log(x) )
summary(fit3)
summary(fit2)
ln
LN
log
log10
library("nnlib")
library("nnrun")
example(nnrun)
example(nnstats.direct)
View(correction.factor.df)
View(genmom.correction.factor.df)
fix(genmom.1997)
library("nnlib")
library("nnrun")
example(nnstats.direct)
genmom.2040
genmom.1997
genmom.2040
genmom.1997
genmom.2040$stats - genmom.1997$stats
plot(genmom.2040$stats)
library("raster")
source('~/.active-rstudio-document', echo=TRUE)
terrain(elevCoarse,opt="flowdir")
crap <- terrain(elevCoarse,opt="flowdir")
plot(crap)
crap@data@values
source('D:/SMWData/scripts/R_Scripts/Fish_Climate_REGRID_Hostetler_GCM_to_SWB.r', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Fish_Climate_REGRID_Hostetler_GCM_to_SWB.r', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Fish_Climate_REGRID_Hostetler_GCM_to_SWB.r', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Fish_Climate_REGRID_Hostetler_GCM_to_SWB.r', echo=TRUE)
filespecs
r_in
dayssinceorigin
View(coords)
t
?projectRaster
source('D:/SMWData/scripts/R_Scripts/Fish_Climate_REGRID_Hostetler_GCM_to_SWB.r', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Fish_Climate_REGRID_Hostetler_GCM_to_SWB.r', echo=TRUE)
pr
r_out
r_in
r_out
xur.corner
you.corner
yur.corner
122000*8.58
122000*0.0858
122000*8.58/100
122000*8.58/1000
0.04*209
(850+100+50) * 18
(2*850+100+50) * 18
(2*850+75+100+50)
(850+100+50)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
dev.off()
dev.off()
dev.off()
dev.off()
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Moshassuck_River__28SEP2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__West_River.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Lincoln_Downs_Brook__01OCT2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Lincoln_Downs_Brook__01OCT2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Rhode_Island_HEC-RAS__Flood_Profiles__Upper_Canada_Pond_Brook__01OCT2012.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Fish-Climate-SWB__Plot_Recharge_by_CLUSTER.R', echo=TRUE)
JGR()
library(JGR)
JGR()
save.image("~/crap.RData")
save.image("C:/Users/smwesten/Downloads/crap.RData")
install.packages("ggplot2")
install.packages("car")
recharge_clus$month <- months(recharge_clus$date)
View(recharge_clus)
recharge_clus$year <- years(recharge_clus$date)
recharge_clus$year <- Years(recharge_clus$date)
recharge_clus$year <- year(recharge_clus$date)
?Chron
?chron
??month
?months
recharge_clus$year <- strftime(recharge_clus$date,"%Y")
View(recharge_clus)
save.image("C:/Users/smwesten/Downloads/crap.RData")
install.packages("plyr")
?plyr
library(plyr)
install.packages(plyr)
install.packages("plyr")
install.packages("plyr")
?plyr
library(plyr)
?plyr
install.packages("reshape2")
library("reshape2")
melt(recharge_clus, id=2:16)
recharge_clus[[2]]
recharge_clus[[1]]
recharge_clus[[16]]
recharge_clus[[17]]
recharge_clus[[16]]
melt(recharge_clus, id=c("date","month","year"))
recharge_clus_flat <- melt(recharge_clus, id=c("date","month","year"))
save.image("C:/Users/smwesten/Downloads/crap.RData")
source('D:/SMWData/scripts/R_Scripts/Fish-Climate-SWB__Plot_Recharge_by_CLUSTER.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Fish-Climate-SWB__Plot_Recharge_by_CLUSTER.R', echo=TRUE)
source('D:/SMWData/scripts/R_Scripts/Fish-Climate-SWB__Plot_Recharge_by_CLUSTER.R', echo=TRUE)
plot(plt)
load("D:/SMWData/WESTENBROEK/output/current_climate/Fish-Climate__run_nnlib_Statewide_hostetler_step1.RData")
for(dirname in mydirs) {
scenario.name <- paste(dirname,"20c3m",sep="_")
dynamic.filename <- paste(basedir,"swb",dirname,"output",air.temp.filename,sep="/")
dynamic.colnames <- c("Date","AT6","AT1","AT2","AT3","AT4","AT5")
dynamic.filename2 <- paste(basedir,"swb",dirname,"output",swb.recharge.filename,sep="/")
dynamic.colnames2 <- c("Date","SWBC1","SWBC2","SWBC3","SWBC4","SWBC5","SWBC6",
"SWBC7","SWBC8","SWBC9","SWBC10","SWBC11","SWBC12","SWBC13",
"SWBC14","SWBC15")
nnmodel.temp <- nnmodel(model.name=model.name,
scenario.name=scenario.name,
climate.source=dirname,
static.filename=static.filename,
dynamic.filename=dynamic.filename,
dynamic.colnames=dynamic.colnames,
dynamic.filename2=dynamic.filename2,
dynamic.colnames2=dynamic.colnames2,
expressions.filename=Rexpressions)
if(keep.all.output) {
nnmodel.temp$output <- nnrun(nnmodel=nnmodel.temp,
static.site.col.name="PU_GAP")
nnmodel.temp$stats <- nnstats(nnmodel=nnmodel.temp,
static.site.col.name="PU_GAP")
} else {
#forward run AND calculate statistics for each site
nnmodel.temp$stats <- nnstats.direct(nnmodel=nnmodel.temp,
static.site.col.name="PU_GAP", dryrun=dryrun)
}
#Calculate correction factor... for each stream segment (not daily)
temp <- ( current$stats[["ST.JULX"]] - nnmodel.temp$stats[["ST.JULX"]] )
correction.factor.df <- cbind(correction.factor.df,temp)
colnames(correction.factor.df)[ncol(correction.factor.df)] <- dirname
assign(paste(dirname,"20c3m",sep="."), nnmodel.temp)
}
require(nnlib)
require(nnrun)
library(ggplot2)
library(methods)
correction.factor.df <- data.frame(Site=current$stats[["Site"]])
for(dirname in mydirs) {
scenario.name <- paste(dirname,"20c3m",sep="_")
dynamic.filename <- paste(basedir,"swb",dirname,"output",air.temp.filename,sep="/")
dynamic.colnames <- c("Date","AT6","AT1","AT2","AT3","AT4","AT5")
dynamic.filename2 <- paste(basedir,"swb",dirname,"output",swb.recharge.filename,sep="/")
dynamic.colnames2 <- c("Date","SWBC1","SWBC2","SWBC3","SWBC4","SWBC5","SWBC6",
"SWBC7","SWBC8","SWBC9","SWBC10","SWBC11","SWBC12","SWBC13",
"SWBC14","SWBC15")
nnmodel.temp <- nnmodel(model.name=model.name,
scenario.name=scenario.name,
climate.source=dirname,
static.filename=static.filename,
dynamic.filename=dynamic.filename,
dynamic.colnames=dynamic.colnames,
dynamic.filename2=dynamic.filename2,
dynamic.colnames2=dynamic.colnames2,
expressions.filename=Rexpressions)
if(keep.all.output) {
nnmodel.temp$output <- nnrun(nnmodel=nnmodel.temp,
static.site.col.name="PU_GAP")
nnmodel.temp$stats <- nnstats(nnmodel=nnmodel.temp,
static.site.col.name="PU_GAP")
} else {
#forward run AND calculate statistics for each site
nnmodel.temp$stats <- nnstats.direct(nnmodel=nnmodel.temp,
static.site.col.name="PU_GAP", dryrun=dryrun)
}
#Calculate correction factor... for each stream segment (not daily)
temp <- ( current$stats[["ST.JULX"]] - nnmodel.temp$stats[["ST.JULX"]] )
correction.factor.df <- cbind(correction.factor.df,temp)
colnames(correction.factor.df)[ncol(correction.factor.df)] <- dirname
assign(paste(dirname,"20c3m",sep="."), nnmodel.temp)
}
save.image("D:/SMWData/WESTENBROEK/output/current_climate/Fish-Climate__run_nnlib_Statewide_hostetler_step1a.RData")
install.packages(c("knitr", "sp", "rgdal", "ggplot2", "car"))
install.packages("googleVis")
install.packages("RNetCDF")
mytable <- data.frame(modename=character(4), evap=character(4), stress=character(4), TM=character(4))
mytable[1, ] <- c("CROP_COEFFICIENTS_ONE_FACTOR_STANDARD","no","no","yes")
viewData(mytable)
mytable$modename <- c("CROP_COEFFICIENTS_ONE_FACTOR_STANDARD","CROP_COEFFICIENTS_TWO_FACTOR_STANDARD",
"CROP_COEFFICIENTS_ONE_FACTOR_NONSTANDARD","CROP_COEFFICIENTS_TWO_FACTOR_NONSTANDARD")
viewData(mytable)
mytable
irr_table <- read.table("two_factor_standard/IRRIGATION_lookup_TWO_FACTOR.txt", as.is=TRUE, header=FALSE, sep="\t")
suppressPackageStartupMessages(library(googleVis))
setwd("D:/SMWData/Source_Code/swb/webpages/Irrigation_module")
irr_table <- read.table("two_factor_standard/IRRIGATION_lookup_TWO_FACTOR.txt", as.is=TRUE, header=FALSE, sep="\t")
mytable <- gvisTable(irr_table, options = list(width = 1200, height=300,
page = "enable"))
mytable
table_19 <- data.frame(soiltype=character(9), awc_unitless_lo=numeric(9),awc_unitless_hi=numeric(9),
rew_lo=numeric(9), rew_hi=numeric(9),
tew_lo=numeric(9), tew_hi=numeric(9))
table_19$soiltype <- c("Sand", "Loamy sand", "Sandy loam", "Loam", "Silt loam", "Silt", "Silt clay loam",
"Silty clay", "Clay")
table_19$awc_unitless_lo <- c(0.05, 0.06, 0.11, 0.13, 0.13, 0.16, 0.13, 0.13, 0.12)
table_19$awc_unitless_hi <- c(0.11, 0.12, 0.15, 0.18, 0.19, 0.20, 0.18, 0.19, 0.20)
table_19$rew_lo <- c(2, 4, 6, 8, 8, 8, 8, 8, 8)
table_19$rew_hi <- c(7, 8, 10, 10, 11, 11, 11, 12, 12, 12)
table_19$rew_hi <- c(7, 8, 10, 10, 11, 11, 11, 12, 12)
table_19$tew_lo <- c(6, 9, 15, 16, 18, 22, 22, 22, 22)
table_19$tew_hi <- c(12, 14, 20, 22, 25, 26, 27, 28, 29)
table_19$awc_lo_in_ft <- table_19$awc_unitless_lo * 12.
table_19$awc_hi_in_ft <- table_19$awc_unitless_hi * 12.
viewData(table_19)
test <- paste(table_19$awc_lo_in_ft,"to",table_19$awc_hi_in_ft)
fix(test)
table19a <- table19[ ,1]
table19 <- data.frame(soiltype=character(9), awc_unitless_lo=numeric(9),awc_unitless_hi=numeric(9),
rew_lo=numeric(9), rew_hi=numeric(9),
tew_lo=numeric(9), tew_hi=numeric(9))
table19$soiltype <- c("Sand", "Loamy sand", "Sandy loam", "Loam", "Silt loam", "Silt", "Silt clay loam",
"Silty clay", "Clay")
table19$awc_unitless_lo <- c(0.05, 0.06, 0.11, 0.13, 0.13, 0.16, 0.13, 0.13, 0.12)
table19$awc_unitless_hi <- c(0.11, 0.12, 0.15, 0.18, 0.19, 0.20, 0.18, 0.19, 0.20)
table19$rew_lo <- c(2, 4, 6, 8, 8, 8, 8, 8, 8)
table19$rew_hi <- c(7, 8, 10, 10, 11, 11, 11, 12, 12)
table19$tew_lo <- c(6, 9, 15, 16, 18, 22, 22, 22, 22)
table19$tew_hi <- c(12, 14, 20, 22, 25, 26, 27, 28, 29)
table19$awc_lo_in_ft <- table_19$awc_unitless_lo * 12.
table19$awc_hi_in_ft <- table_19$awc_unitless_hi * 12.
table19a <- table19[ ,1]
table19a <- data.frame(soiltype=table19[ ,1])
viewData(table19a)
table19a$awc_range <- paste(table_19$awc_lo_in_ft,"to",table_19$awc_hi_in_ft)
table19a$rew_range <- paste(table_19$rew_lo / 25.4,"to",table_19$rew_hi)
viewData(table19a)
?format
table19a$rew_range <- paste(format(table_19$rew_lo / 25.4, digits=3),"to",
format(table_19$rew_hi / 25.4, digits=3) )
viewData(table19a)
table19a$rew_range <- paste(format(table_19$rew_lo / 25.4, digits=2),"to",
format(table_19$rew_hi / 25.4, digits=2) )
viewData(table19a)
table19a$tew_range <- paste(format(table_19$tew_lo / 25.4, digits=2),"to",
format(table_19$tew_hi / 25.4, digits=2) )
viewData(table19a)
1/.85
ff()
setwd("D:/SMWData/Source_Code/swb2/webpages/Irrigation_module")
sm <- read.table("one_factor_standard/SOIL_MOISTURE_2_2.ssf", colClasses=c("character","character","character","numeric"))
colnames(sm) <- c("row_col", "date", "time", "value")
sm$date <- as.Date(sm$date, format="%m/%d/%Y")
refet <- read.table("one_factor_standard/REFERENCE_ET_2_2.ssf", colClasses=c("character","character","character","numeric"))
colnames(refet) <- c("row_col", "date", "time", "value")
refet$date <- as.Date(refet$date, format="%m/%d/%Y")
refet_adj <- read.table("one_factor_standard/REFERENCE_ET_ADJ_2_2.ssf", colClasses=c("character","character","character","numeric"))
colnames(refet) <- c("row_col", "date", "time", "value")
refet$date <- as.Date(refet$date, format="%m/%d/%Y")
cropet <- read.table("one_factor_standard/CROP_ET_2_2.ssf", colClasses=c("character","character","character","numeric"))
colnames(cropet) <- c("row_col", "date", "time", "value")
cropet$date <- as.Date(cropet$date, format="%m/%d/%Y")
rootdpth <- read.table("one_factor_standard/ROOTING_DEPTH_2_2.ssf", colClasses=c("character","character","character","numeric"))
colnames(rootdpth) <- c("row_col", "date", "time", "value")
rootdpth$date <- as.Date(rootdpth$date, format="%m/%d/%Y")
cropcoef <- read.table("one_factor_standard/CROP_COEFFICIENT_2_2.ssf", colClasses=c("character","character","character","numeric"))
colnames(cropcoef) <- c("row_col", "date", "time", "value")
cropcoef$date <- as.Date(cropcoef$date, format="%m/%d/%Y")
baresoilevap <- read.table("one_factor_standard/BARE_SOIL_EVAP_2_2.ssf", colClasses=c("character","character","character","numeric"))
colnames(baresoilevap) <- c("row_col", "date", "time", "value")
baresoilevap$date <- as.Date(baresoilevap$date, format="%m/%d/%Y")
irr <- read.table("one_factor_standard/IRRIGATION_FROM_GW_2_2.ssf", colClasses=c("character","character","character","numeric"))
colnames(irr) <- c("row_col", "date", "time", "value")
irr$date <- as.Date(irr$date, format="%m/%d/%Y")
cw_et <- read.csv("CROPWAT/ET0-Penman_Monteith_CROPWAT_1990.csv", header=TRUE)
cw_et$et0_in_day <- cw_et$et0_mm_day / 25.4
cw_et$date <- as.Date(cw_et$date, format="%m/%d/%Y")
cw_msb <- read.csv("CROPWAT/Mass_Balance_CROPWAT_1990.csv", header=TRUE)
cw_msb$date <- as.Date(cw_msb$date, format="%m/%d/%Y")
cw_msb$gross_irr_in <- cw_msb$gross_irr_mm / 25.4
cw_msb$eta_in_day <- cw_msb$eta_mm_day / 25.4
cw_msb$deficit_in <- cw_msb$deficit_mm / 25.4
cw_msb$sm <- sm$value[sm$date == as.Date("1990-05-10")] - cw_msb$deficit_in
install.packages("googleVis")
??table
?table
?tables
install.packages("tables")
?tables
install.packages("xtable")
